{"version":3,"sources":["assets/images/char.svg","assets/images/bmark.svg","utils/BooksAPI.js","Header.js","BookRating.js","BookOverlay.js","OnTheShelf.js","Book.js","Main.js","HeaderAddBooks.js","AddBooks.js","Footer.js","Loading.js","App.js","registerServiceWorker.js","index.js"],"names":["module","exports","api","token","localStorage","Math","random","toString","substr","headers","search","query","fetch","method","body","JSON","stringify","then","res","json","data","books","Header","props","id","className","src","payaso","alt","to","process","bookmark","BookRating","item","stars","onClick","addStar","BookOverlay","moveTo","clear","shelf","OnTheShelf","currentShelf","this","myReads","overlayMenu","filter","map","index","key","undefined","imageLinks","thumbnail","title","authors","publishedDate","pageCount","Component","Book","document","querySelectorAll","forEach","el","style","display","getElementById","sort","sortBy","exact","path","render","Main","HeaderAddBooks","AddBooks","state","searchResults","invalid","updateQuery","debounce","value","trim","replace","setState","length","BooksAPI","resp","list","obj","checked","find","push","catch","err","console","log","type","placeholder","onChange","event","target","Footer","href","rel","Loading","App","loading","rating","num","updatedBook","filtered","move","getItem","parse","myBooks","prevState","setItem","fetchBooks","book","bookId","concat","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","error","ReactDOM","URL","origin","addEventListener","response","status","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.55d0461c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/char.9b487253.svg\";","module.exports = __webpack_public_path__ + \"static/media/bmark.b4604bc2.svg\";","\nconst api = \"https://reactnd-books-api.udacity.com\"\n\n\n// Generate a unique token for storing your bookshelf data on the backend server.\nlet token = localStorage.token\nif (!token)\n  token = localStorage.token = Math.random().toString(36).substr(-8)\n\nconst headers = {\n  'Accept': 'application/json',\n  'Authorization': token\n}\n\nexport const get = (bookId) =>\n  fetch(`${api}/books/${bookId}`, { headers })\n    .then(res => res.json())\n    .then(data => data)\n\nexport const getAll = () =>\n  fetch(`${api}/books`, { headers })\n    .then(res => res.json())\n    .then(data => data.books)\n\nexport const update = (book, shelf) =>\n  fetch(`${api}/books/${book.id}`, {\n    method: 'PUT',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ shelf })\n  }).then(res => res.json())\n\nexport const search = (query) =>\n  fetch(`${api}/search`, {\n    method: 'POST',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ query })\n  }).then(res => res.json())\n    .then(data => data.books)\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport payaso from './assets/images/char.svg'\nimport bookmark from './assets/images/bmark.svg'\n\nfunction Header(props) {\n  return (\n    <header>\n      <div id=\"hero\">\n        <div className=\"char\"><img src={payaso} alt=\"Hello\"/></div>\n        <div className=\"logo\">\n          <p className=\"titleOne\">My</p>\n          <p className=\"titleTwo\">Reads</p>\n        </div>\n        <div className=\"mark\">\n          <Link to={process.env.PUBLIC_URL + '/search'}>\n            <img src={bookmark} alt=\"Add Books\"/>\n          </Link>\n        </div>\n      </div>\n      <Link to={process.env.PUBLIC_URL + '/search'} className=\"add\">Add Books</Link>\n    </header>\n  )\n}\n\nexport default Header;\n\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nfunction BookRating(props) {\n  return (\n    <div id={`${props.item.id}_rating`} className=\"rating\">\n      {\n        props.item.stars > 4 ?\n        <span className=\"ratingFive active\" onClick={() => props.addStar(5, props.item)}>★</span> :\n        <span className=\"ratingFive\" onClick={() => props.addStar(5, props.item)}>★</span>\n      }\n      {\n        props.item.stars > 3 ?\n        <span className=\"ratingFour active\" onClick={() => props.addStar(4, props.item)}>★</span> :\n        <span className=\"ratingFour\" onClick={() => props.addStar(4, props.item)}>★</span>\n      }\n      {\n        props.item.stars > 2 ?\n        <span className=\"ratingThree active\" onClick={() => props.addStar(3, props.item)}>★</span> :\n        <span className=\"ratingThree\" onClick={() => props.addStar(3, props.item)}>★</span>\n      }\n      {\n        props.item.stars > 1 ?\n        <span className=\"ratingTwo active\" onClick={() => props.addStar(2, props.item)}>★</span> :\n        <span className=\"ratingTwo\" onClick={() => props.addStar(2, props.item)}>★</span>\n      }\n      {\n        props.item.stars > 0 ?\n        <span className=\"ratingOne active\" onClick={() => props.addStar(1, props.item)}>★</span> :\n        <span className=\"ratingOne\" onClick={() => props.addStar(1, props.item)}>★</span>\n      }\n    </div>\n  )\n}\nBookRating.propTypes = {\n  addStar: PropTypes.func.isRequired\n}\n\nexport default BookRating;","import React from 'react'\nimport PropTypes from 'prop-types'\n\nfunction BookOverlay(props) {\n  const { item, moveTo, clear } = props\n  return (\n    <div id={`${item.id}_overlay`} className=\"bookOverlay\">\n      <button className=\"changerOver\" onClick={() => clear()}></button>\n      <h3>Move to:</h3>\n      {\n        item.shelf === 'currentlyReading' &&\n        <div className=\"buttons\">\n          <button className=\"shelfButton\" onClick={() => moveTo('wantToRead', item)}>Want to read</button>\n          <button className=\"shelfButton\" onClick={() => moveTo('read', item)}>Read</button>\n          <button className=\"shelfButton\" onClick={() => moveTo('none', item)}>Remove</button>\n        </div>\n      }\n      {\n        item.shelf === 'wantToRead' &&\n        <div className=\"buttons\">\n          <button className=\"shelfButton\" onClick={() => moveTo('currentlyReading', item)}>Reading</button>\n          <button className=\"shelfButton\" onClick={() => moveTo('read', item)}>Read</button>\n          <button className=\"shelfButton\" onClick={() => moveTo('none', item)}>Remove</button>\n        </div>\n      }\n      {\n        item.shelf === 'read' &&\n        <div className=\"buttons\">\n          <button className=\"shelfButton\" onClick={() => moveTo('currentlyReading', item)}>Reading</button>\n          <button className=\"shelfButton\" onClick={() => moveTo('wantToRead', item)}>Want to read</button>\n          <button className=\"shelfButton\" onClick={() => moveTo('none', item)}>Remove</button>\n        </div>\n      }\n      {\n        item.shelf === 'none' &&\n        <div className=\"buttons\">\n          <button className=\"shelfButton\" onClick={() => moveTo('currentlyReading', item)}>Reading</button>\n          <button className=\"shelfButton\" onClick={() => moveTo('wantToRead', item)}>Want to read</button>\n          <button className=\"shelfButton\" onClick={() => moveTo('read', item)}>Read</button>\n        </div>\n      }\n    </div>\n  )\n}\nBookOverlay.propTypes = {\n  moveTo: PropTypes.func.isRequired,\n  clear: PropTypes.func.isRequired\n}\n\nexport default BookOverlay;","import React , { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport BookOverlay from './BookOverlay'\n\nclass OnTheShelf extends Component {\n  static propTypes = {\n    myReads: PropTypes.array.isRequired,\n    moveTo: PropTypes.func.isRequired,\n    overlayMenu: PropTypes.func.isRequired,\n    clear: PropTypes.func.isRequired\n  }\n  currentShelf(shelf) {\n    let currentShelf\n    switch(shelf) {\n      case 'currentlyReading':\n        currentShelf = 'Reading'\n        break\n      case 'wantToRead':\n        currentShelf = 'Want To Read'\n        break\n      default:\n        currentShelf = 'Read'\n        break\n    }\n    return currentShelf\n  }\n  render() {\n    const { myReads, moveTo, shelf, overlayMenu, clear } = this.props\n    return (\n      myReads.filter((item) => item.shelf !== shelf).map((item, index) => (\n        <li key={index} className={`${item.id} onShelf`}>\n          {/* placeholder for undefined images */}\n          {\n            item.imageLinks === undefined ?\n            <div className=\"bookImage noCover\">NO COVER</div> :\n            <img src={item.imageLinks.thumbnail} alt={item.title} className=\"bookImage\"/>\n          }\n          <div>\n            <span className=\"bookTitle\">{item.title}</span>\n            {/* placeholder for undefined authors */}\n            {\n              item.authors === undefined ?\n              <span>----------</span> :\n              <span>{item.authors}</span>\n            }\n            <span>Published: {item.publishedDate}</span>\n            <span>Pages: {item.pageCount}</span>\n            <span>Rating: {item.stars} stars</span>\n            <span className=\"onShelfLine\">Currently on the \"{this.currentShelf(item.shelf)}\" shelf</span>\n          </div>\n          <button className=\"changer\" onClick={() => overlayMenu(`${item.id}_overlay`, item.shelf)}></button>\n          <BookOverlay\n              item={item}\n              moveTo={moveTo}\n              overlayMenu={overlayMenu}\n              clear={clear}\n            />\n        </li>\n      ))\n    )\n  }\n}\n\nexport default OnTheShelf;","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { Route } from 'react-router-dom'\nimport sortBy from 'sort-by'\nimport BookRating from './BookRating'\nimport OnTheShelf from './OnTheShelf'\nimport BookOverlay from './BookOverlay'\n\nclass Book extends Component {\n  static propTypes = {\n    myReads: PropTypes.array.isRequired,\n    shelf: PropTypes.string.isRequired,\n    moveTo: PropTypes.func.isRequired,\n  }\n  // clear overlay divs to prevent mess\n  clear = () => {\n    document.querySelectorAll('.bookOverlay')\n    .forEach(el => el.style.display = 'none')\n  }\n  // create the overlay options when changer button is clicked\n  overlayMenu = (id, shelf) => {\n    this.clear()\n\n    const bookOverlay = document.getElementById(id)\n    bookOverlay.style.display = 'grid'\n    // bookDiv.style.display === 'grid' ?\n    // (bookDiv.style.display = 'none') :\n    // (bookDiv.style.display = 'grid')\n  }\n  render() {\n    /*\n     Render the books for the specific shelf\n    */\n    const { myReads, shelf, moveTo, addStar } = this.props\n    //sort by title\n    myReads.sort(sortBy('title'))\n    return(\n      <ul className=\"book\">\n        <Route exact path={process.env.PUBLIC_URL + '/search'} render={() => (\n          <OnTheShelf\n            myReads={myReads}\n            shelf={shelf}\n            moveTo={moveTo}\n            overlayMenu={this.overlayMenu}\n            clear={this.clear}\n          />\n        )}/>\n        {myReads.filter((item) => item.shelf === shelf).map((item, index) => (\n          <li key={index} className={item.id}>\n            {/* placeholder for undefined images */}\n            {\n              item.imageLinks === undefined ?\n              <div className=\"bookImage noCover\">NO COVER</div> :\n              <img src={item.imageLinks.thumbnail} alt={item.title} className=\"bookImage\"/>\n            }\n            <div>\n              <span className=\"bookTitle\">{item.title}</span>\n              {/* placeholder for undefined authors */}\n              {\n                item.authors === undefined ?\n                <span>----------</span> :\n                <span>{item.authors}</span>\n              }\n              <span>Published: {item.publishedDate}</span>\n              <span>Pages: {item.pageCount}</span>\n              {/* Rating stars should only be available for books that are on shelves */}\n              <Route exact path={process.env.PUBLIC_URL + '/'} render={() => (\n                <BookRating\n                  item={item}\n                  addStar={addStar}\n                />\n              )}/>\n            </div>\n            <button className=\"changer\" onClick={() => this.overlayMenu(`${item.id}_overlay`, shelf)}></button>\n            <BookOverlay\n              item={item}\n              moveTo={moveTo}\n              overlayMenu={this.overlayMenu}\n              clear={this.clear}\n            />\n          </li>\n        ))}\n      </ul>\n    )\n  }\n}\n\nexport default Book;","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Book from './Book';\n\nfunction Main(props) {\n  const {myReads, moveTo, addStar} = props\n  return (\n    <main>\n      <section id=\"currentlyReading\">\n        <h2>Reading...</h2>\n        <Book\n          myReads={myReads}\n          shelf={'currentlyReading'}\n          moveTo={moveTo}\n          addStar={addStar}\n        />\n      </section>\n      <section id=\"wantToRead\">\n        <h2>Want to read!</h2>\n        <Book\n          myReads={myReads}\n          shelf={'wantToRead'}\n          moveTo={moveTo}\n          addStar={addStar}\n        />\n      </section>\n      <section id=\"read\">\n        <h2>Read.</h2>\n        <Book\n          myReads={myReads}\n          shelf={'read'}\n          moveTo={moveTo}\n          addStar={addStar}\n        />\n      </section>\n    </main>\n  )\n}\nMain.propTypes = {\n  myReads: PropTypes.array.isRequired,\n  moveTo: PropTypes.func.isRequired,\n  addStar: PropTypes.func.isRequired\n}\n\nexport default Main;","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nfunction HeaderAddBooks(props) {\n  return (\n    <header className=\"headerAddBooks\">\n      <div id=\"heroAddBooks\">\n        <Link to={process.env.PUBLIC_URL + '/'} className=\"back\">Back</Link>\n        <p className=\"titleThree\">add Books</p>\n      </div>\n    </header>\n  )\n}\n\nexport default HeaderAddBooks;","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport * as BooksAPI from './utils/BooksAPI'\nimport { debounce } from 'lodash'\nimport Book from './Book'\n\nclass AddBooks extends Component {\n  static propTypes = {\n    myReads: PropTypes.array.isRequired,\n    moveTo: PropTypes.func.isRequired\n  }\n  state = {\n    query: '',\n    searchResults: [],\n    invalid: false\n  }\n  updateQuery = debounce((value) => {\n    const query = value.trim().replace(/\\s+/g, ' ')\n    this.setState({query})\n\n    if (query.length) {\n      BooksAPI.search(query).then((resp) => {\n        let list = []\n        resp.map((item) => {\n          const obj = {...item, stars: 0}\n          obj.shelf = 'none'\n          // Prevent duplicates\n          const checked = this.props.myReads.find(el => el.id === obj.id)\n          return checked ? list.push(checked) : list.push(obj)\n        })\n        return list\n      }).then((resp) => {\n        this.setState({\n          searchResults: resp,\n          invalid: false\n        })\n      }).catch((err) => {\n        console.log(err)\n        this.setState({\n          searchResults: [],\n          invalid: true\n        })\n      })\n    } else {\n      console.log('Empty')\n      this.setState({\n        searchResults: [],\n        invalid: false\n      })\n    }\n  }, 500)\n  render() {\n    return (\n      <main>\n        <section id=\"search\">\n          <input\n            type=\"text\"\n            placeholder=\"search for new books!\"\n            className=\"search\"\n            onChange={(event) => this.updateQuery(event.target.value)}\n          />\n        </section>\n        <section id=\"addBooks\">\n          <h2>searching for... ' {this.state.query} '</h2>\n          {this.state.searchResults.length > 0 && (\n            <div className=\"searchResults\">\n              <p>\n                Found {this.state.searchResults.length} results\n              </p>\n            </div>\n          )}\n          {this.state.invalid === true && (\n            <div className=\"searchResults\">\n              <p>We didnt find anything...</p>\n              <p className=\"searchTerms\"><strong>Available search terms:</strong> 'Android', 'Art', 'Artificial Intelligence', 'Astronomy', 'Austen', 'Baseball', 'Basketball', 'Bhagat', 'Biography', 'Brief', 'Business', 'Camus', 'Cervantes', 'Christie', 'Classics', 'Comics', 'Cook', 'Cricket', 'Cycling', 'Desai', 'Design', 'Development', 'Digital Marketing', 'Drama', 'Drawing', 'Dumas', 'Education', 'Everything', 'Fantasy', 'Film', 'Finance', 'First', 'Fitness', 'Football', 'Future', 'Games', 'Gandhi', 'Homer', 'Horror', 'Hugo', 'Ibsen', 'Journey', 'Kafka', 'King', 'Lahiri', 'Larsson', 'Learn', 'Literary Fiction', 'Make', 'Manage', 'Marquez', 'Money', 'Mystery', 'Negotiate', 'Painting', 'Philosophy', 'Photography', 'Poetry', 'Production', 'Programming', 'React', 'Redux', 'River', 'Robotics', 'Rowling', 'Satire', 'Science Fiction', 'Shakespeare', 'Singh', 'Swimming', 'Tale', 'Thrun', 'Time', 'Tolstoy', 'Travel', 'Ultimate', 'Virtual Reality', 'Web Development', 'iOS'</p>\n            </div>\n          )}\n          <Book\n            myReads={this.state.searchResults}\n            shelf={'none'}\n            moveTo={this.props.moveTo}\n          />\n        </section>\n      </main>\n    )\n  }\n}\n\nexport default AddBooks;","import React from 'react'\n\nfunction Footer() {\n  return (\n    <footer>\n      <p>Udacity My Reads Project - <a href=\"https://github.com/dekisr\" target=\"_blank\" rel=\"noopener noreferrer\">github</a></p>\n    </footer>\n  )\n}\n\nexport default Footer;","import React from 'react'\n\nfunction Loading(props) {\n  return (\n    <div className=\"loading\">\n      <div className=\"lds-ripple\"><div></div><div></div></div>\n    </div>\n  )\n}\n\nexport default Loading;","import React, { Component } from 'react'\nimport { Route } from 'react-router-dom'\nimport * as BooksAPI from './utils/BooksAPI'\nimport Header from './Header'\nimport Main from './Main'\nimport HeaderAddBooks from './HeaderAddBooks'\nimport AddBooks from './AddBooks'\nimport Footer from './Footer'\nimport Loading from './Loading'\n\nclass App extends Component {\n  state = {\n    myReads: [],\n    loading: false\n  }\n  componentDidMount() {\n    // Try to get data from localStorage or from BooksAPI\n    (!localStorage.getItem('myReadsLocal')) ?\n    this.myBooks() :\n    this.setState({\n      myReads: JSON.parse(localStorage.getItem('myReadsLocal')),\n      loading: true\n    })\n  }\n  componentDidUpdate(prevState) {\n    // Update the localStorage on changes\n    (this.state.myReads !== prevState.myReads) &&\n    localStorage.setItem('myReadsLocal', JSON.stringify(this.state.myReads))\n  }\n  /*\n   Create the first shelf from selected books\n  */\n  myBooks() {\n    const currentlyReading = ['mDzDBQAAQBAJ', '_hIWb6Z8mX0C', 'luD1Bpc1fmsC']\n    const wantToRead = ['3_PhCwAAQBAJ', 'piwP9HXtpvUC', 'QlduAgAAQBAJ', 'MjhaAAAAMAAJ']\n    const read = ['BjDuAAAAMAAJ', 'JvOTGx2S6UgC', 'pqHfBQAAQBAJ', 'ZTOtnZg_j3gC', 'a_fSBAAAQBAJ']\n    this.fetchBooks(wantToRead, 'wantToRead')\n    this.fetchBooks(currentlyReading, 'currentlyReading')\n    this.fetchBooks(read, 'read')\n  }\n  /*\n   Fetch the chosen books to a specific shelf\n  */\n  fetchBooks(books, shelf) {\n    books.map((book) => {\n      return (\n        BooksAPI.get(book).then((resp) => {\n          const obj = {\n            ...resp.book,\n            stars: 0\n          }\n          return obj\n        }).then((resp) => {\n          let list = []\n          resp.shelf = shelf\n          list.push(resp)\n          return list\n        }).then((resp) => {\n          this.setState((prevState) => ({\n            myReads: prevState.myReads.concat(resp),\n            loading: true\n          }))\n        })\n      )\n    })\n  }\n  /*\n   Function to add star rating\n  */\n  rating = (num, item) => {\n    const updatedBook = {\n      ...item,\n      stars: num\n    }\n    const updatedBooks = this.state.myReads\n    const filtered = updatedBooks.filter((el) => el.id !== updatedBook.id)\n    filtered.push(updatedBook)\n    this.setState({\n      myReads: filtered\n    })\n  }\n  /*\n   Move the current selected book to another shelf\n  */\n  move = (shelf, item) => {\n    // prevent overlay mess\n    document.querySelectorAll('.bookOverlay')\n    .forEach(el => el.style.display = 'none')\n    // apply the chosen shelf\n    const updatedBook = item\n    updatedBook.shelf = shelf\n    const updatedBooks = this.state.myReads\n    // prevent duplicates\n    const filtered = updatedBooks.filter((el) => el.id !== updatedBook.id)\n    shelf !== 'none' && filtered.push(updatedBook)\n    this.setState({\n      myReads: filtered\n    })\n  }\n  render() {\n    if(this.state.loading === false) {\n      return <Loading/>\n    } else {\n      return (\n        <div id=\"myReads\">\n          <Route exact path={process.env.PUBLIC_URL + '/'} render={() => (\n            <Header/>\n          )}/>\n          <Route exact path={process.env.PUBLIC_URL + '/'} render={() => (\n            <Main\n              myReads={this.state.myReads}\n              moveTo={this.move}\n              addStar={this.rating}\n            />\n          )}/>\n          <Route path={process.env.PUBLIC_URL + '/search'} render={() => (\n            <HeaderAddBooks/>\n          )}/>\n          <Route path={process.env.PUBLIC_URL + '/search'} render={() => (\n            <AddBooks\n              myReads={this.state.myReads}\n              moveTo={this.move}\n            />\n          )}/>\n          <Footer/>\n        </div>\n      );\n    }\n  }\n}\n\nexport default App;","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom'\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<BrowserRouter><App/></BrowserRouter>, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}